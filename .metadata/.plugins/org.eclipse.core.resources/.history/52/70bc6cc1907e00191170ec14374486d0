package restAPIRevision;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;

import static io.restassured.RestAssured.given;

import org.testng.Assert;


public class addComment {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String sessionid=Authentication.getSessionId();
		System.out.println(sessionid);
		String issueId = createIssue.createIssue();
		System.out.println(issueId);

		String comment="This is a comment regarding the quality of the response for wires.";
		RestAssured.baseURI="http://localhost:8080";
		Response res=given().header("Content-Type","application/json").
		header("Cookie", "JSESSIONID="+sessionid).pathParam("issueId", issueId).
		body("{"+
				"    \"body\": \"This is a comment regarding the quality of the response for wires.\""+
				"}").log().all().when().post("rest/api/2/issue/{issueId}/comment").
		then().assertThat().statusCode(201).log().all().extract().response();
		
		String response=res.asString();
		JsonPath js=new JsonPath(response);
		String id=js.get("id");
		String key=js.get("key");
		System.out.println("ID: "+id);
		
		
		
		Response rs=given().header("Content-Type","application/json").
		header("Cookie", "JSESSIONID="+sessionid).
		pathParam("issueId", issueId).when().
		get("rest/api/2/issue/{issueId}").
		then().assertThat().statusCode(200).extract().response();
		
		String response1=rs.asString();
		JsonPath js1=new JsonPath(response1);
		int count=js1.get("fields.comment.comments.size()");
		for(int i=0;i<count;i++)
		{
			System.out.println("Comment:: "+js1.get("fields.comment.comments.get("+i+").body"));
			Assert.assertEquals(response1, js1.get("fields.comment.comments.get("+i+").body"));
			
		}
		
	}

}
